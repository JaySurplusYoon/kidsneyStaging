{"ast":null,"code":"var _jsxFileName = \"/Users/jay_yoon/Downloads/kidsneyStaging/src/Pages/MyBag/EditModal/EditModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from '../../../Components/Button/Button';\nimport { BASE_URL } from '../../../config';\nimport './EditModal.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditModal = _ref => {\n  _s();\n\n  let {\n    editedProduct,\n    setIsClosed\n  } = _ref;\n  const {\n    id,\n    product\n  } = editedProduct;\n  const {\n    images,\n    name,\n    price,\n    quantity\n  } = product;\n  const [editedSize, setEditedSize] = useState({\n    sizeId: '',\n    sizeName: ''\n  });\n  const [editedQuantity, setEditedQuantity] = useState(1);\n  const [selectedImg, setSelectedImg] = useState('0');\n  const sizeList = [{\n    id: 0,\n    value: 'S',\n    name: 'S'\n  }, {\n    id: 1,\n    value: 'M',\n    name: 'M'\n  }, {\n    id: 2,\n    value: 'L',\n    name: 'L'\n  }, {\n    id: 3,\n    value: 'F',\n    name: 'FREE'\n  }];\n\n  const editOrder = () => {\n    if (editedSize.sizeId === '') {\n      return;\n    } else {\n      fetch(`${BASE_URL}/carts/${id}`, {\n        method: 'PATCH',\n        headers: {\n          Authorization: localStorage.getItem('token')\n        },\n        body: JSON.stringify({\n          size: editedSize.sizeName,\n          quantity: editedQuantity\n        })\n      }).then(res => {\n        if (res.ok) {\n          alert('상품 수정이 완료되었습니다.');\n          closeModal();\n          window.location.reload();\n        }\n      });\n    }\n  };\n\n  const selectImg = e => {\n    setSelectedImg(e.target.id);\n  }; // size parts\n\n\n  const handleSize = e => {\n    const {\n      value\n    } = e.target;\n    const {\n      id\n    } = e.target;\n    setEditedSize({ ...editedSize,\n      sizeName: value,\n      sizeId: id\n    });\n  }; // quantity parts\n\n\n  const plusQuantity = () => {\n    setEditedQuantity(quantity => quantity + 1);\n  };\n\n  const minusQuantity = () => {\n    setEditedQuantity(quantity <= 0 ? 0 : quantity - 1);\n  };\n\n  const closeModal = () => {\n    setIsClosed(true);\n  };\n\n  return editedProduct && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editModal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"closeBtn\",\n        onClick: closeModal,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"imgContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"mainImg\",\n            src: images[selectedImg],\n            alt: \"main\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"thumnails\",\n            children: images.map((img, i) => {\n              return /*#__PURE__*/_jsxDEV(\"img\", {\n                id: i,\n                className: \"thumnail\",\n                src: img,\n                alt: \"thumnail\",\n                onClick: selectImg\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"price\",\n            children: [\"$\", price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sizeOptions\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \" Size \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), sizeList.map(_ref2 => {\n              let {\n                id,\n                value,\n                name,\n                count\n              } = _ref2;\n              return /*#__PURE__*/_jsxDEV(\"label\", {\n                className: editedSize.sizeName === value ? 'size clicked' : 'size',\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  id: id,\n                  type: \"checkbox\",\n                  name: \"sizeOption\",\n                  value: value,\n                  className: count === 0 ? 'disabled' : null,\n                  disabled: count === 0,\n                  onClick: handleSize\n                }, id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 23\n                }, this)]\n              }, id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 21\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: editedSize.sizeName.length > 0 ? 'errorMsg' : 'errorMsg show',\n              children: \"\\uC0AC\\uC774\\uC988\\uB97C \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quantity\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"countBtns\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: minusQuantity,\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-minus\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this), editedQuantity, /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: plusQuantity,\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-plus\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"updateBtn\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              text: \"update\",\n              functionType: editOrder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 7\n  }, this);\n};\n\n_s(EditModal, \"6m4NYVOdt6UZNhjBFgSgP6WWhd4=\");\n\n_c = EditModal;\nexport default EditModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditModal\");","map":{"version":3,"sources":["/Users/jay_yoon/Downloads/kidsneyStaging/src/Pages/MyBag/EditModal/EditModal.js"],"names":["React","useState","Button","BASE_URL","EditModal","editedProduct","setIsClosed","id","product","images","name","price","quantity","editedSize","setEditedSize","sizeId","sizeName","editedQuantity","setEditedQuantity","selectedImg","setSelectedImg","sizeList","value","editOrder","fetch","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","size","then","res","ok","alert","closeModal","window","location","reload","selectImg","e","target","handleSize","plusQuantity","minusQuantity","map","img","i","count","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,OAAO,kBAAP;;;AAEA,MAAMC,SAAS,GAAG,QAAoC;AAAA;;AAAA,MAAnC;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,GAAmC;AACpD,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA;AAAN,MAAkBH,aAAxB;AACA,QAAM;AAAEI,IAAAA,MAAF;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA;AAAvB,MAAoCJ,OAA1C;AAEA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC;AAAEc,IAAAA,MAAM,EAAE,EAAV;AAAcC,IAAAA,QAAQ,EAAE;AAAxB,GAAD,CAA5C;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCjB,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACkB,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,GAAD,CAA9C;AAEA,QAAMoB,QAAQ,GAAG,CACf;AAAEd,IAAAA,EAAE,EAAE,CAAN;AAASe,IAAAA,KAAK,EAAE,GAAhB;AAAqBZ,IAAAA,IAAI,EAAE;AAA3B,GADe,EAEf;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASe,IAAAA,KAAK,EAAE,GAAhB;AAAqBZ,IAAAA,IAAI,EAAE;AAA3B,GAFe,EAGf;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASe,IAAAA,KAAK,EAAE,GAAhB;AAAqBZ,IAAAA,IAAI,EAAE;AAA3B,GAHe,EAIf;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASe,IAAAA,KAAK,EAAE,GAAhB;AAAqBZ,IAAAA,IAAI,EAAE;AAA3B,GAJe,CAAjB;;AAOA,QAAMa,SAAS,GAAG,MAAM;AACtB,QAAIV,UAAU,CAACE,MAAX,KAAsB,EAA1B,EAA8B;AAC5B;AACD,KAFD,MAEO;AACLS,MAAAA,KAAK,CAAE,GAAErB,QAAS,UAASI,EAAG,EAAzB,EAA4B;AAC/BkB,QAAAA,MAAM,EAAE,OADuB;AAE/BC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADR,SAFsB;AAK/BC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,IAAI,EAAEpB,UAAU,CAACG,QADE;AAEnBJ,UAAAA,QAAQ,EAAEK;AAFS,SAAf;AALyB,OAA5B,CAAL,CASGiB,IATH,CASQC,GAAG,IAAI;AACb,YAAIA,GAAG,CAACC,EAAR,EAAY;AACVC,UAAAA,KAAK,CAAC,iBAAD,CAAL;AACAC,UAAAA,UAAU;AAEVC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;AACF,OAhBD;AAiBD;AACF,GAtBD;;AAwBA,QAAMC,SAAS,GAAGC,CAAC,IAAI;AACrBvB,IAAAA,cAAc,CAACuB,CAAC,CAACC,MAAF,CAASrC,EAAV,CAAd;AACD,GAFD,CAvCoD,CA2CpD;;;AACA,QAAMsC,UAAU,GAAGF,CAAC,IAAI;AACtB,UAAM;AAAErB,MAAAA;AAAF,QAAYqB,CAAC,CAACC,MAApB;AACA,UAAM;AAAErC,MAAAA;AAAF,QAASoC,CAAC,CAACC,MAAjB;AAEA9B,IAAAA,aAAa,CAAC,EAAE,GAAGD,UAAL;AAAiBG,MAAAA,QAAQ,EAAEM,KAA3B;AAAkCP,MAAAA,MAAM,EAAER;AAA1C,KAAD,CAAb;AACD,GALD,CA5CoD,CAmDpD;;;AACA,QAAMuC,YAAY,GAAG,MAAM;AACzB5B,IAAAA,iBAAiB,CAACN,QAAQ,IAAIA,QAAQ,GAAG,CAAxB,CAAjB;AACD,GAFD;;AAIA,QAAMmC,aAAa,GAAG,MAAM;AAC1B7B,IAAAA,iBAAiB,CAACN,QAAQ,IAAI,CAAZ,GAAgB,CAAhB,GAAoBA,QAAQ,GAAG,CAAhC,CAAjB;AACD,GAFD;;AAIA,QAAM0B,UAAU,GAAG,MAAM;AACvBhC,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAGA,SACED,aAAa,iBACX;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAA6B,QAAA,OAAO,EAAEiC,UAAtC;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAyB,YAAA,GAAG,EAAE7B,MAAM,CAACU,WAAD,CAApC;AAAmD,YAAA,GAAG,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,sBACGV,MAAM,CAACuC,GAAP,CAAW,CAACC,GAAD,EAAMC,CAAN,KAAY;AACtB,kCACE;AAEE,gBAAA,EAAE,EAAEA,CAFN;AAGE,gBAAA,SAAS,EAAC,UAHZ;AAIE,gBAAA,GAAG,EAAED,GAJP;AAKE,gBAAA,GAAG,EAAC,UALN;AAME,gBAAA,OAAO,EAAEP;AANX,iBACOQ,CADP;AAAA;AAAA;AAAA;AAAA,sBADF;AAUD,aAXA;AADH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAkBE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE;AAAA,sBAAKxC;AAAL;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,SAAS,EAAC,OAAd;AAAA,4BAAwBC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGU,QAAQ,CAAC2B,GAAT,CAAa,SAAgC;AAAA,kBAA/B;AAAEzC,gBAAAA,EAAF;AAAMe,gBAAAA,KAAN;AAAaZ,gBAAAA,IAAb;AAAmByC,gBAAAA;AAAnB,eAA+B;AAC5C,kCACE;AAEE,gBAAA,SAAS,EACPtC,UAAU,CAACG,QAAX,KAAwBM,KAAxB,GAAgC,cAAhC,GAAiD,MAHrD;AAAA,wCAME;AAEE,kBAAA,EAAE,EAAEf,EAFN;AAGE,kBAAA,IAAI,EAAC,UAHP;AAIE,kBAAA,IAAI,EAAC,YAJP;AAKE,kBAAA,KAAK,EAAEe,KALT;AAME,kBAAA,SAAS,EAAE6B,KAAK,KAAK,CAAV,GAAc,UAAd,GAA2B,IANxC;AAOE,kBAAA,QAAQ,EAAEA,KAAK,KAAK,CAPtB;AAQE,kBAAA,OAAO,EAAEN;AARX,mBACOtC,EADP;AAAA;AAAA;AAAA;AAAA,wBANF,eAgBE;AAAA,4BAAOG;AAAP;AAAA;AAAA;AAAA;AAAA,wBAhBF;AAAA,iBACOH,EADP;AAAA;AAAA;AAAA;AAAA,sBADF;AAoBD,aArBA,CAFH,eAyBE;AACE,cAAA,SAAS,EACPM,UAAU,CAACG,QAAX,CAAoBoC,MAApB,GAA6B,CAA7B,GACI,UADJ,GAEI,eAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAsCE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,sCACE;AAAQ,gBAAA,OAAO,EAAEL,aAAjB;AAAA,uCACE;AAAG,kBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,EAIG9B,cAJH,eAKE;AAAQ,gBAAA,OAAO,EAAE6B,YAAjB;AAAA,uCACE;AAAG,kBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtCF,eAmDE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACE,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,YAAY,EAAEvB;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAnDF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAFJ;AAsFD,CArJD;;GAAMnB,S;;KAAAA,S;AAuJN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport Button from '../../../Components/Button/Button';\nimport { BASE_URL } from '../../../config';\n\nimport './EditModal.scss';\n\nconst EditModal = ({ editedProduct, setIsClosed }) => {\n  const { id, product } = editedProduct;\n  const { images, name, price, quantity } = product;\n\n  const [editedSize, setEditedSize] = useState({ sizeId: '', sizeName: '' });\n  const [editedQuantity, setEditedQuantity] = useState(1);\n  const [selectedImg, setSelectedImg] = useState('0');\n\n  const sizeList = [\n    { id: 0, value: 'S', name: 'S' },\n    { id: 1, value: 'M', name: 'M' },\n    { id: 2, value: 'L', name: 'L' },\n    { id: 3, value: 'F', name: 'FREE' },\n  ];\n\n  const editOrder = () => {\n    if (editedSize.sizeId === '') {\n      return;\n    } else {\n      fetch(`${BASE_URL}/carts/${id}`, {\n        method: 'PATCH',\n        headers: {\n          Authorization: localStorage.getItem('token'),\n        },\n        body: JSON.stringify({\n          size: editedSize.sizeName,\n          quantity: editedQuantity,\n        }),\n      }).then(res => {\n        if (res.ok) {\n          alert('상품 수정이 완료되었습니다.');\n          closeModal();\n\n          window.location.reload();\n        }\n      });\n    }\n  };\n\n  const selectImg = e => {\n    setSelectedImg(e.target.id);\n  };\n\n  // size parts\n  const handleSize = e => {\n    const { value } = e.target;\n    const { id } = e.target;\n\n    setEditedSize({ ...editedSize, sizeName: value, sizeId: id });\n  };\n\n  // quantity parts\n  const plusQuantity = () => {\n    setEditedQuantity(quantity => quantity + 1);\n  };\n\n  const minusQuantity = () => {\n    setEditedQuantity(quantity <= 0 ? 0 : quantity - 1);\n  };\n\n  const closeModal = () => {\n    setIsClosed(true);\n  };\n  return (\n    editedProduct && (\n      <div className=\"editModal\">\n        <div className=\"modalBox\">\n          <button className=\"closeBtn\" onClick={closeModal}>\n            <i className=\"fas fa-times\" />\n          </button>\n          <h2>Edit Item</h2>\n          <main>\n            <div className=\"imgContainer\">\n              <img className=\"mainImg\" src={images[selectedImg]} alt=\"main\" />\n              <div className=\"thumnails\">\n                {images.map((img, i) => {\n                  return (\n                    <img\n                      key={i}\n                      id={i}\n                      className=\"thumnail\"\n                      src={img}\n                      alt=\"thumnail\"\n                      onClick={selectImg}\n                    />\n                  );\n                })}\n              </div>\n            </div>\n            <div className=\"description\">\n              <h3>{name}</h3>\n              <h3 className=\"price\">${price}</h3>\n              <div className=\"sizeOptions\">\n                <h3> Size </h3>\n                {sizeList.map(({ id, value, name, count }) => {\n                  return (\n                    <label\n                      key={id}\n                      className={\n                        editedSize.sizeName === value ? 'size clicked' : 'size'\n                      }\n                    >\n                      <input\n                        key={id}\n                        id={id}\n                        type=\"checkbox\"\n                        name=\"sizeOption\"\n                        value={value}\n                        className={count === 0 ? 'disabled' : null}\n                        disabled={count === 0}\n                        onClick={handleSize}\n                      />\n                      <span>{name}</span>\n                    </label>\n                  );\n                })}\n\n                <div\n                  className={\n                    editedSize.sizeName.length > 0\n                      ? 'errorMsg'\n                      : 'errorMsg show'\n                  }\n                >\n                  사이즈를 선택해주세요.\n                </div>\n              </div>\n              <div className=\"quantity\">\n                <h3>Quantity</h3>\n                <div className=\"countBtns\">\n                  <button onClick={minusQuantity}>\n                    <i className=\"fas fa-minus\" />\n                  </button>\n                  {editedQuantity}\n                  <button onClick={plusQuantity}>\n                    <i className=\"fas fa-plus\" />\n                  </button>\n                </div>\n              </div>\n\n              <div className=\"updateBtn\">\n                <Button text=\"update\" functionType={editOrder} />\n              </div>\n            </div>\n          </main>\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default EditModal;\n"]},"metadata":{},"sourceType":"module"}