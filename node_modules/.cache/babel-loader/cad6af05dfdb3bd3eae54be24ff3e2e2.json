{"ast":null,"code":"var _jsxFileName = \"/Users/jay_yoon/Downloads/kidsneyStaging/src/Components/Nav/Modal/LoginModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { BASE_URL } from '../../../config';\nimport './LoginModal.scss';\nimport '../../../Styles/common.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginModal = _ref => {\n  _s();\n\n  let {\n    closeModal,\n    setActiveModal\n  } = _ref;\n\n  const changeActiveModal = () => {\n    setActiveModal('signUpModal');\n  };\n\n  const [inputValue, setInputValue] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = inputValue;\n  const isValidEmail = email.includes('@') && email.includes('.');\n  const specialLetter = password.search(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&]{8,}$/);\n  const isValidPassword = password.length >= 8;\n  const getIsActive = isValidEmail && specialLetter === 0 && isValidPassword;\n\n  const checkValidity = () => {\n    if (!isValidEmail) {\n      alert('이메일 형식이 맞지 않습니다.');\n      return false;\n    } else if (specialLetter === -1) {\n      alert('비밀번호에 대문자, 소문자, 특수문자를 포함해주세요.');\n      return false;\n    } else if (!isValidPassword) {\n      alert('비밀번호 8자 이상으로 적어주세요');\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  function handleInputValue(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputValue({ ...inputValue,\n      [name]: value\n    });\n  }\n\n  function goToMain() {\n    checkValidity() && fetch(`${BASE_URL}/users/signin`, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    }).then(res => res.json()).then(res => {\n      if (res.token) {\n        alert('로그인 성공!');\n        localStorage.setItem('token', res.token);\n        localStorage.setItem('first_name', res.first_name);\n        closeModal();\n      } else {\n        alert('다시 시도해 주세요!');\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginModal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"logo\",\n        children: \"KIDSNEY account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"closeBtn\",\n        onClick: closeModal,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"loginContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"loginId\",\n          type: \"email\",\n          placeholder: \"Username or Email Address\",\n          onChange: handleInputValue,\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"loginPw\",\n          type: \"password\",\n          placeholder: \"Password\",\n          onChange: handleInputValue,\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: getIsActive ? 'loginButtonActive' : 'loginButton',\n          type: \"button\",\n          onClick: goToMain,\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginHelp\",\n        children: \"Need help signing in?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"createId\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: changeActiveModal,\n          className: \"createBtn\",\n          children: \"Create an Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginModal, \"xaTR3rUPIpPNn4920KUMszj2ycM=\");\n\n_c = LoginModal;\nexport default LoginModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginModal\");","map":{"version":3,"sources":["/Users/jay_yoon/Downloads/kidsneyStaging/src/Components/Nav/Modal/LoginModal.js"],"names":["React","useState","BASE_URL","LoginModal","closeModal","setActiveModal","changeActiveModal","inputValue","setInputValue","email","password","isValidEmail","includes","specialLetter","search","isValidPassword","length","getIsActive","checkValidity","alert","handleInputValue","e","name","value","target","goToMain","fetch","method","body","JSON","stringify","then","res","json","token","localStorage","setItem","first_name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { BASE_URL } from '../../../config';\n\nimport './LoginModal.scss';\nimport '../../../Styles/common.scss';\n\nconst LoginModal = ({ closeModal, setActiveModal }) => {\n  const changeActiveModal = () => {\n    setActiveModal('signUpModal');\n  };\n\n  const [inputValue, setInputValue] = useState({\n    email: '',\n    password: '',\n  });\n\n  const { email, password } = inputValue;\n\n  const isValidEmail = email.includes('@') && email.includes('.');\n  const specialLetter = password.search(\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&]{8,}$/\n  );\n  const isValidPassword = password.length >= 8;\n  const getIsActive = isValidEmail && specialLetter === 0 && isValidPassword;\n\n  const checkValidity = () => {\n    if (!isValidEmail) {\n      alert('이메일 형식이 맞지 않습니다.');\n      return false;\n    } else if (specialLetter === -1) {\n      alert('비밀번호에 대문자, 소문자, 특수문자를 포함해주세요.');\n      return false;\n    } else if (!isValidPassword) {\n      alert('비밀번호 8자 이상으로 적어주세요');\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  function handleInputValue(e) {\n    const { name, value } = e.target;\n    setInputValue({ ...inputValue, [name]: value });\n  }\n\n  function goToMain() {\n    checkValidity() &&\n      fetch(`${BASE_URL}/users/signin`, {\n        method: 'POST',\n        body: JSON.stringify({\n          email: email,\n          password: password,\n        }),\n      })\n        .then(res => res.json())\n        .then(res => {\n          if (res.token) {\n            alert('로그인 성공!');\n            localStorage.setItem('token', res.token);\n            localStorage.setItem('first_name', res.first_name);\n            closeModal();\n          } else {\n            alert('다시 시도해 주세요!');\n          }\n        });\n  }\n\n  return (\n    <div className=\"loginModal\">\n      <div className=\"login\">\n        <h1 className=\"logo\">KIDSNEY account</h1>\n        <button className=\"closeBtn\" onClick={closeModal}>\n          X\n        </button>\n        <form className=\"loginContainer\">\n          <input\n            className=\"loginId\"\n            type=\"email\"\n            placeholder=\"Username or Email Address\"\n            onChange={handleInputValue}\n            name=\"email\"\n          />\n          <input\n            className=\"loginPw\"\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={handleInputValue}\n            name=\"password\"\n          />\n          <button\n            className={getIsActive ? 'loginButtonActive' : 'loginButton'}\n            type=\"button\"\n            onClick={goToMain}\n          >\n            Sign In\n          </button>\n        </form>\n        <div className=\"loginHelp\">Need help signing in?</div>\n        <div className=\"createId\">\n          <button onClick={changeActiveModal} className=\"createBtn\">\n            Create an Account\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginModal;\n"]},"metadata":{},"sourceType":"module"}